#name: Build and Deploy to Render
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#    steps:
#      # Checkout the repository
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      # Set up JDK 23 to 17 because i have made changes from
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#
#      # Build the Spring Boot application
#      - name: Build with Maven
#        run: ./mvnw clean package -DskipTests
#
#      # Set up Docker Buildx
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      # Login to Docker Hub
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      # Build and push Docker image
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/extension_manager:latest
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#
##      # Deploy to Render (optional, if Render supports GitHub Actions deployment)
##      - name: Deploy to Render
##        run: |
##          curl -X POST \
##          -H "Authorization: Bearer ${{ secrets.RENDER_API_TOKEN }}" \
##          -H "Content-Type: application/json" \
##          -d '{"serviceId":"${{ secrets.RENDER_SERVICE_ID }}","image":"${{ secrets.DOCKER_USERNAME }}/extention-manager:latest"}' \
##          https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys
#      - name: Deploy to Azure Web App
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: extensionmanager
#          slot-name: production
#          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#          images: ${{ secrets.DOCKER_USERNAME }}/extention_manager:latest

name: Build and Deploy to Azure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Build the Spring Boot application
      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/extension_manager:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: extensionmanager
          slot-name: production
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ${{ secrets.DOCKER_USERNAME }}/extension_manager:latest